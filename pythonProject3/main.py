import tkinter as tk
from tkinter import ttk
from PIL import Image, ImageTk
import os
from explicit_heat_scheme import ExplicitForm
from tkinter import Toplevel

mainColor = '#C0D9E6'
textColor = '#000000'
drawingColor = '#FFFFFF'
class EquationForms(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫—É—Ä—Å–∞ –ú–ú–ü–°.")

        self.menubar = tk.Menu(self, font=('Arial', 12))
        self.config(menu=self.menubar)

        self.notebook = ttk.Notebook(self)
        self.notebook.pack(expand=1, fill="both")

        self.heatEquationSolver_tab = HeatEquationSolver(self.notebook)
        self.notebook.add(self.heatEquationSolver_tab, text="–£—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏")

        self.waveEquationSolver_tab = WaveEquationSolver(self.notebook)
        self.notebook.add(self.waveEquationSolver_tab, text="–í–æ–ª–Ω–æ–≤–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ")

        self.LaplassEquationSolver_tab = LaplassEquationSolver(self.notebook)
        self.notebook.add(self.LaplassEquationSolver_tab, text="–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –õ–∞–ø–ª–∞—Å—Å–∞")

        self.submenu = tk.Menu(self.menubar, tearoff=0)
        self.menubar.add_cascade(label="–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏", menu=self.submenu)
        self.submenu.add_separator()
        self.submenu.add_command(label="–í—ã—Ö–æ–¥", command=self.quit)
        file_menu1 = tk.Menu(self.menubar, tearoff=0)
        self.menubar.add_cascade(label="–£—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏", menu=file_menu1, font=('Arial', 12, 'bold'))
        file_menu1.add_command(label="–Ø–≤–Ω–∞—è —Å—Ö–µ–º–∞", command=self.open_explicit_form)
        file_menu2 = tk.Menu(self.menubar, tearoff=0)
        self.menubar.add_cascade(label="–í–æ–ª–Ω–æ–≤–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ", menu=file_menu2, font=('Arial', 12, 'bold'))
        file_menu3 = tk.Menu(self.menubar, tearoff=0)
        self.menubar.add_cascade(label="–ú–µ—Ç–æ–¥—ã –ø—Ä–æ–≥–æ–Ω–∫–∏", menu=file_menu3, font=('Arial', 12, 'bold'))

    def open_explicit_form(self):
        explicit_form = ExplicitForm()
        explicit_form_images = explicit_form.get_images()
        for i, image_path in enumerate(explicit_form_images):
            explicit_form.show_image(image_path, position=(i * 50, i * 50))
        explicit_form.mainloop()

    def on_explicit_form_close(self):
        self.deiconify()

    def on_implicit_form_close(self):
        self.deiconify()

    def quit_form(self, event=None):
        self.destroy()

    def show_heatEquationSolver(self):
        self.notebook.select(self.heatEquationSolver_tab)

    def show_waveEquationSolver(self):
        self.notebook.select(self.waveEquationSolver_tab)

    def show_explicit_form(self):
        explicit_form = ExplicitForm(self)
        explicit_form.mainloop()


class HeatEquationSolver(tk.Frame):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.image = ImageTk.PhotoImage(Image.open('images/wallpaper.png'))  # –§–æ–Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞
        self.background_label = tk.Label(self, image=self.image)
        self.background_label.place(x=0, y=0, relwidth=1, relheight=1)

        self.title_label = tk.Label(self, text="–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê –î–õ–Ø –£–†–ê–í–ù–ï–ù–ò–Ø –¢–ï–ü–õ–û–ü–†–û–í–û–î–ù–û–°–¢–ò",
                                    font=('Arial', 16, 'bold'), bg='#C0D9E6')
        self.title_label.pack(pady=20)
        # Add text labels
        text_below_title = ("–ù–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é u=u(x, t), —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â—É—é –≤ –æ–±–ª–∞—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Du,"
                            "\n—É—Ä–∞–≤–Ω–µ–Ω–∏—é —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –Ω–∞ Gu - –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏ Du"
                            "\nDu = {x: 0 ‚â§ x ‚â§ 1, t: 0 ‚â§ t ‚â§ T }. "
                            "\n–∑–Ω–∞—á–µ–Ω–∏—è g(x, t)"
                            "\–ü—Ä–∏ t=0  –∑–∞–¥–∞–Ω—ã –Ω–∞—á–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è u(x, 0) = ùúë(ùë•)"
                            "\n –ù–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏ Gu –∑–∞–¥–∞–Ω—ã –≥—Ä–∞–Ω–∏—á–Ω—ã–µ (–∫—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è)"
                            "\n g(x, t) : ùë¢(0,ùë°)=ùë¢(1,ùë°)=0 ‚Äì –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è"
                            )
        self.text_label = tk.Label(self, text=text_below_title, bg="white",
                                       font=('Arial', 14, 'bold'),
                                       anchor='w')
        self.text_label.pack(pady=10, padx=15, anchor='w')

        text_below_title_0 = "–ì–µ–æ–º–µ—Ç—Ä–∏—è –æ–±–ª–∞—Å—Ç–∏"
        self.text_label_0 = tk.Label(self, text=text_below_title_0, font=('Arial', 12, 'bold'), bg='#C0D9E6',
                                     anchor='w')
        self.text_label_0.pack(pady=19, padx=55, anchor='w')

        image_data_1 = [{"file": "wavely_graph.png", "text": "", "position": (305, 180)}]

        for item in image_data_1:
            image_path_1 = os.path.join("images", item["file"])
            image_1 = Image.open(image_path_1)
            photo_1 = ImageTk.PhotoImage(image_1)
            canvas_1 = tk.Canvas(self, width=image_1.width, height=image_1.height, bg='white', bd=1, relief='solid')
            canvas_1.place(x=35, y=258, anchor="w")
            canvas_1.create_image(0, 0, anchor=tk.NW, image=photo_1)
            canvas_1.photo = photo_1
            text_widget_1 = tk.Label(self, text=item["text"], font=('Arial', 12, 'bold'), bg='#C0D9E6')
            text_widget_1.place(x=item["position"][0], y=item["position"][1] - text_widget_1.winfo_reqheight() - 20)

        image_data_2 = [{"file": "heat_eq_1.png", "text": """–≥–¥–µ a - –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏(–µ—Å–ª–∏ u - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞) –∏ –º–∞—Å—Å–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ u - –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è,–¥–∞–≤–ª–µ–Ω–∏–µ –≤ –∑–∞–¥–∞—á–∞—Ö —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Ç.–ø.)
               \n–ü–æ—Å–∫–æ–ª—å–∫—É –≤ –æ–±—â–∏–π –≤–∏–¥ —É—Ä–∞–≤–Ω–µ–Ω–∏—è –≤—Ö–æ–¥–∏—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞–≤–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø—Ä–∏ t = 0
                \n–∏ –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø—Ä–∏ x = 0, x = l, t > 0. """
                            , "position": (300, 425)}]

        for item_1 in image_data_2:
            image_path_2 = os.path.join("images", item_1["file"])
            image_2 = Image.open(image_path_2)
            photo_2 = ImageTk.PhotoImage(image_2)

            canvas_2 = tk.Canvas(self, width=image_2.width, height=image_2.height, bg='white', bd=1, relief='solid')
            canvas_2.place(x=300, y=200, anchor="w")
            canvas_2.create_image(0, 0, anchor=tk.NW, image=photo_2)
            canvas_2.photo = photo_2
            text_widget_2 = tk.Label(self, text=item_1["text"], font=('Arial', 12, 'bold'), bg='#C0D9E6',
                                     justify=tk.LEFT)
            text_widget_2.place(x=item_1["position"][0], y=item_1["position"][1] - text_widget_2.winfo_reqheight() - 20,
                                anchor='w')

        ###################  –ü–ï–†–í–ê–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

        div_container = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
        div_container.pack(padx=500, pady=600, anchor='w')
        div_container.pack_propagate(False)
        div_container.config(width=390, height=270)
        image_data_1_3 = [{"file": "therm_cond_bnd1.png", "text": """–ü–ï–†–í–ê–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê
                                                                                     \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                           "position": (200, 300)}]
        for item_2 in image_data_1_3:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_1_3 = tk.Label(div_container, text=item_2["text"], font=('Arial', 12, 'bold'), bg=mainColor,
                                       fg=textColor)
            text_widget_1_3.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_1_3 = os.path.join("images", item_2["file"])
            image_1_3 = Image.open(image_path_1_3)
            photo_1_3 = ImageTk.PhotoImage(image_1_3)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
            canvas_Laplass1 = tk.Canvas(div_container, width=image_1_3.width, height=image_1_3.height, bg=drawingColor,
                                        bd=1,
                                        relief='solid')
            canvas_Laplass1.pack()

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_Laplass1.create_image(0, 0, anchor=tk.NW, image=photo_1_3)
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_Laplass1.photo = photo_1_3

        photo_1_4 = [{"file": "therm_cond_bnd1_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (400, 400)}]

        for item_3 in photo_1_4:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_1_4 = tk.Label(div_container, text=item_3["text"], font=('Arial', 12, 'bold'), bg=mainColor,
                                       fg=textColor)
            text_widget_1_4.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_1_4 = os.path.join("images", item_3["file"])
            image_1_4 = Image.open(image_path_1_4)
            photo_1_4 = ImageTk.PhotoImage(image_1_4)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
            canvas_1_4 = tk.Canvas(div_container, width=image_1_4.width, height=image_1_4.height, bg=drawingColor, bd=1,
                                   relief='solid')
            canvas_1_4.pack()

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_1_4.create_image(0, 0, anchor=tk.NW, image=photo_1_4)
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_1_4.photo = photo_1_4

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            div_container.place(x=200, y=815, anchor="sw")

        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

        bubble_container = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
        bubble_container.pack_propagate(False)
        bubble_container.config(width=390, height=370)
        etl_title = tk.Label(bubble_container, font=('Arial', 12, 'bold'), bg=drawingColor,
                             text='–ü–µ—Ä–≤–∞—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –î–∏—Ä–∏—Ö–ª–µ)')
        etl_main = tk.Label(bubble_container, font=('Arial', 11), justify='left', wraplength=370, bg=drawingColor, text=
        '''–∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–º–µ–ø–µ—Ä–∞—Ç—É—Ä—ã –∑–∞–¥–∞—ë—Ç—Å—è –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö –æ–±–ª–∞—Å—Ç–∏ (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏). 
        –ì—Ä–∞–Ω–∏—Ü–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏) –∑–∞ —Å—á–µ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Ç–µ–ø–ª–∞ (–≤–µ—â–µ—Å—Ç–≤–∞).
        –¢–∞–∫, –∫—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–¥–∞—é—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É/–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ü–∞—Ö —Å—Ç–µ—Ä–∂–Ω—è,
        –í —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—é—Ç –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏) –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏''')

        etl_title.place(x=195, y=50, anchor='s')
        etl_main.place(x=5, y=120, anchor='nw')

        bubble_container.pack_forget()

        def on_enter(event):
            bubble_container.place(x=200, y=540, anchor='sw')

        def on_leave(event):
            bubble_container.place_forget()

        div_container.bind("<Enter>", on_enter)
        div_container.bind("<Leave>", on_leave)

        ###################  –í–¢–û–†–ê–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

        # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
        div_container_1 = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
        div_container_1.pack(pady=500, padx=600, anchor='w')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è div_container
        div_container_1.pack_propagate(False)
        div_container_1.config(width=390, height=270)
        image_data_2_1 = [{"file": "therm_cond_bnd2.png", "text": """–í–¢–û–†–ê–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê
                                                                                       \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                           "position": (200, 300)}]

        for item_4 in image_data_2_1:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_2_1 = tk.Label(div_container_1, text=item_4["text"], font=('Arial', 12, 'bold'), bg=mainColor,
                                       fg=textColor)
            text_widget_2_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_2_1 = os.path.join("images", item_4["file"])
            image_2_1 = Image.open(image_path_2_1)
            photo_2_1 = ImageTk.PhotoImage(image_2_1)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
            canvas_Laplass2 = tk.Canvas(div_container_1, width=image_2_1.width, height=image_2_1.height,
                                        bg=drawingColor, bd=1,
                                        relief='solid')
            canvas_Laplass2.pack()

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_Laplass2.create_image(0, 0, anchor=tk.NW, image=photo_2_1)
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_Laplass2.photo = photo_2_1

        image_data_2_2 = [{"file": "therm_cond_bnd2_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (300, 500)}]

        for item_5 in image_data_2_2:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_2_2 = tk.Label(div_container_1, text=item_5["text"], font=('Arial', 12, 'bold'), bg=mainColor,
                                       fg=textColor)
            text_widget_2_2.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_2_2 = os.path.join("images", item_5["file"])
            image_2_2 = Image.open(image_path_2_2)
            photo_2_2 = ImageTk.PhotoImage(image_2_2)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
            canvas_WEGREQ_2st = tk.Canvas(div_container_1, width=image_2_2.width, height=image_2_2.height,
                                          bg=drawingColor, bd=1,
                                          relief='solid')
            canvas_WEGREQ_2st.pack()

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_WEGREQ_2st.create_image(0, 0, anchor=tk.NW, image=photo_2_2)
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_WEGREQ_2st.photo = photo_2_2

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            div_container_1.place(x=930, y=815, anchor="s")

        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
        bubble_container_1 = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
        bubble_container_1.pack_propagate(False)
        bubble_container_1.config(width=390, height=370)
        etl_1_title = tk.Label(bubble_container_1, font=('Arial', 12, 'bold'), bg=drawingColor,
                               text='–í—Ç–æ—Ä–∞—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –ù–µ–π–º–∞–Ω–∞)')
        etl_1_main = tk.Label(bubble_container_1, font=('Arial', 11), justify='left', wraplength=370, bg=drawingColor,
                              text=
                              '''–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞ —Ç–µ–ø–ª–∞ (–≤–µ—â–µ—Å—Ç–≤–∞) –∑–∞–¥–∞–µ—Ç—Å—è –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö –æ–±–ª–∞—Å—Ç–∏. 
        –ß–µ—Ä–µ–∑ –≥—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω (–¥–∏—Ñ—Ñ—É–∑–∏—è) —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å—é.
        –¢–∞–∫, –∫—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–¥–∞—é—Ç –ø–æ—Ç–æ–∫–∏ —Ç–µ–ø–ª–∞ –Ω–∞ –ª–µ–≤–æ–º –∏ –Ω–∞ –ø—Ä–∞–≤–æ–º –∫–æ–Ω—Ü–∞—Ö —Å—Ç–µ—Ä–∂–Ω—è,
        –í —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—é—Ç –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏) –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏''')

        etl_1_title.place(x=195, y=50, anchor='s')
        etl_1_main.place(x=5, y=120, anchor='nw')
        bubble_container_1.pack_forget()

        def on_enter(event):
            bubble_container_1.place(x=930, y=540, anchor='s')

        def on_leave(event):
            bubble_container_1.place_forget()

        div_container_1.bind("<Enter>", on_enter)
        div_container_1.bind("<Leave>", on_leave)

        ###################  –¢–†–ï–¢–¨–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

        # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
        div_container_2 = tk.Frame(self, bg=mainColor, bd=1, relief='solid', width=800, height=400)
        div_container_2.pack(pady=500, padx=600, anchor='w')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è div_container
        div_container_2.pack_propagate(False)
        div_container_2.config(width=390, height=270)
        image_data_3_1 = [{"file": "therm_cond_bnd3.png", "text": """–¢–†–ï–¢–¨–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê
                                                                                             \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                           "position": (250, 300)}]

        for item_6 in image_data_3_1:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_3_1 = tk.Label(div_container_2, text=item_6["text"], font=('Arial', 12, 'bold'),
                                       bg=mainColor, fg=textColor)
            text_widget_3_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_3_1 = os.path.join("images", item_6["file"])
            image_3_1 = Image.open(image_path_3_1)
            photo_3_1 = ImageTk.PhotoImage(image_3_1)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
            canvas_3_1 = tk.Canvas(div_container_2, width=image_3_1.width, height=image_3_1.height, bg=drawingColor,
                                   bd=1, relief='solid')
            canvas_3_1.pack()

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_3_1.create_image(0, 0, anchor=tk.NW, image=photo_3_1)
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_3_1.photo = photo_3_1

            image_data_3_2 = [
                {"file": "therm_cond_bnd3_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (300, 500)}]

            for item_7 in image_data_3_2:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_3_2 = tk.Label(div_container_2, text=item_7["text"], font=('Arial', 12, 'bold'),
                                           bg=mainColor, fg=textColor)
                text_widget_3_2.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_3_2 = os.path.join("images", item_7["file"])
                image_3_2 = Image.open(image_path_3_2)
                photo_3_2 = ImageTk.PhotoImage(image_3_2)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_3_2 = tk.Canvas(div_container_2, width=image_3_2.width, height=image_3_2.height, bg=drawingColor,
                                       bd=1, relief='solid')
                canvas_3_2.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_3_2.create_image(0, 0, anchor=tk.NW, image=photo_3_2)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_3_2.photo = photo_3_2

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                div_container_2.place(x=1670, y=815, anchor="se")

        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

        bubble_container_2 = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
        bubble_container_2.pack_propagate(False)
        bubble_container_2.config(width=390, height=370)
        etl_2_title = tk.Label(bubble_container_2, font=('Arial', 12, 'bold'), bg=drawingColor,
                               text='–¢—Ä–µ—Ç—å—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –†–æ–±–∏–Ω–∞)')
        etl_2_main = tk.Label(bubble_container_2, font=('Arial', 11), justify='left', wraplength=370, bg=drawingColor,
                              text=
                              '''–ö–æ–º–±–∏–Ω–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏) –∏ –ø–æ—Ç–æ–∫–∞ —Ç–µ–ø–ª–∞ (–≤–µ—â–µ—Å—Ç–≤–∞) –∑–∞–¥–∞–µ—Ç—Å—è –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö –æ–±–ª–∞—Å—Ç–∏. 
        –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω (–¥–∏—Ñ—Ñ—É–∑–∏—è) —Å –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–æ–π, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è) –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏) –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ.
        –¢–∞–∫, –∫—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–¥–∞—é—Ç —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω —Å –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–æ–π (—Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π), –Ω–∞ –ª–µ–≤–æ–º –∏ –Ω–∞ –ø—Ä–∞–≤–æ–º –∫–æ–Ω—Ü–∞—Ö —Å—Ç–µ—Ä–∂–Ω—è,
        –í —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—é—Ç –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏) –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏''')

        etl_2_title.place(x=195, y=50, anchor='s')
        etl_2_main.place(x=5, y=120, anchor='nw')
        bubble_container_2.pack_forget()

        def on_enter(event):
            bubble_container_2.place(x=1670, y=540, anchor='se')

        def on_leave(event):
            bubble_container_2.place_forget()

        div_container_2.bind("<Enter>", on_enter)
        div_container_2.bind("<Leave>", on_leave)


class WaveEquationSolver(tk.Frame):
    def __init__(self, master):
        super().__init__(master)

        self.image = ImageTk.PhotoImage(Image.open('images/wallpaper.png'))  # –§–æ–Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞
        self.background_label = tk.Label(self, image=self.image)
        self.background_label.place(x=0, y=0, relwidth=1, relheight=1)

        self.title_label = tk.Label(self, text="–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á –¥–ª—è —É—Ä–∞–≤–Ω–µ–Ω–∏–π –≥–∏–ø–µ—Ä–±–æ–ª–∏—á–µ—Å–∫–æ–≥–æ —Ç–∏–ø–∞",
                                    font=('Arial', 16, 'bold'), bg='#C0D9E6')
        self.title_label.pack(pady=20)
        text_below_title = "–í–û–õ–ù–û–í–û–ï —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤ –æ–±–ª–∞—Å—Ç–∏ [ 0, l ] –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ –≤—Ä–µ–º–µ–Ω–∏ [ 0, t ]:"
        self.text_label = tk.Label(self, text=text_below_title, font=('Arial', 12, 'bold'), bg='#C0D9E6', anchor='w')
        self.text_label.pack(pady=10, padx=15, anchor='w')

        text_below_title_0 = "–ì–µ–æ–º–µ—Ç—Ä–∏—è –æ–±–ª–∞—Å—Ç–∏"
        self.text_label_0 = tk.Label(self, text=text_below_title_0, font=('Arial', 12, 'bold'), bg='#C0D9E6',
                                     anchor='w')
        self.text_label_0.pack(pady=19, padx=55, anchor='w')

        image_data_1 = [{"file": "wavely_graph.png", "text": "–û–±—â–∏–π –≤–∏–¥ –æ–¥–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:", "position": (305, 180)}]

        for item in image_data_1:
            image_path_1 = os.path.join("images", item["file"])
            image_1 = Image.open(image_path_1)
            photo_1 = ImageTk.PhotoImage(image_1)
            canvas_1 = tk.Canvas(self, width=image_1.width, height=image_1.height, bg='white', bd=1, relief='solid')
            canvas_1.place(x=35, y=258, anchor="w")

            canvas_1.create_image(0, 0, anchor=tk.NW, image=photo_1)
            canvas_1.photo = photo_1
            text_widget_1 = tk.Label(self, text=item["text"], font=('Arial', 12, 'bold'), bg='#C0D9E6')
            text_widget_1.place(x=item["position"][0], y=item["position"][1] - text_widget_1.winfo_reqheight() - 20)

        image_data_2 = [{"file": "wave_equation_general_both.png", "text": """–≥–¥–µ a - —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –º–∞–ª—ã—Ö –≤–æ–∑–º—É—â–µ–Ω–∏–π –≤ –º–∞—Ç–µ—Ä–∏–∞–ª–µ, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —Å—Ç—Ä—É–Ω–∞, –∏
               \nu(x,t) - –ø–æ–ø–µ—Ä–µ—á–Ω—ã–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å—Ç—Ä—É–Ω—ã.
                \n–ì—Ä–∞–Ω–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø—Ä–∏ x = 0, x = l, t > 0. """
                            , "position": (300, 425)}]

        for item_1 in image_data_2:
            image_path_2 = os.path.join("images", item_1["file"])
            image_2 = Image.open(image_path_2)
            photo_2 = ImageTk.PhotoImage(image_2)
            canvas_2 = tk.Canvas(self, width=image_2.width, height=image_2.height, bg='white', bd=1, relief='solid')
            canvas_2.place(x=300, y=200, anchor="w")
            canvas_2.create_image(0, 0, anchor=tk.NW, image=photo_2)
            canvas_2.photo = photo_2
            text_widget_2 = tk.Label(self, text=item_1["text"], font=('Arial', 12, 'bold'), bg='#C0D9E6',
                                     justify=tk.LEFT)
            text_widget_2.place(x=item_1["position"][0], y=item_1["position"][1] - text_widget_2.winfo_reqheight() - 20,
                                anchor='w')

            ###################  –ü–ï–†–í–ê–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

            # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
            div_container = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
            div_container.pack(padx=600, pady=800, anchor='w')
            div_container.pack_propagate(False)
            div_container.config(width=390, height=270)
            Image_data_WEG_1_1 = [{"file": "wavely_bnd1.png", "text": """–ü–ï–†–í–ê–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê
                                                                                                    \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                                   "position": (200, 300)}]

            for item_2 in Image_data_WEG_1_1:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_WEG_1_1 = tk.Label(div_container, text=item_2["text"], font=('Arial', 12, 'bold'),
                                               bg=mainColor, fg=textColor)
                text_widget_WEG_1_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                Image_path_WEG_1_1 = os.path.join("images", item_2["file"])
                Image_WEG_1_1 = Image.open(Image_path_WEG_1_1)
                photo_WEG_1_1 = ImageTk.PhotoImage(Image_WEG_1_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_WEG_1_1 = tk.Canvas(div_container, width=Image_WEG_1_1.width, height=Image_WEG_1_1.height,
                                           bg=drawingColor,
                                           relief='solid')
                canvas_WEG_1_1.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_WEG_1_1.create_image(0, 0, anchor=tk.NW, image=photo_WEG_1_1)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_WEG_1_1.photo = photo_WEG_1_1

            photo_WEG_1_2 = [{"file": "wavely_bnd1_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (400, 400)}]

            for item_3 in photo_WEG_1_2:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_WEG_1_2 = tk.Label(div_container, text=item_3["text"], font=('Arial', 12, 'bold'),
                                               bg=mainColor, fg=textColor)
                text_widget_WEG_1_2.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_WEG_1_2 = os.path.join("images", item_3["file"])
                image_WEG_1_2 = Image.open(image_path_WEG_1_2)
                photo_WEG_1_2 = ImageTk.PhotoImage(image_WEG_1_2)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_WEGREQ1st = tk.Canvas(div_container, width=image_WEG_1_2.width, height=image_WEG_1_2.height,
                                             bg=drawingColor, bd=1,
                                             relief='solid')
                canvas_WEGREQ1st.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_WEGREQ1st.create_image(0, 0, anchor=tk.NW, image=photo_WEG_1_2)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_WEGREQ1st.photo = photo_WEG_1_2

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                div_container.place(x=200, y=815, anchor="sw")

            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

            bubble_container = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
            bubble_container.pack_propagate(False)
            bubble_container.config(width=390, height=370)
            etl_title = tk.Label(bubble_container, font=('Arial', 12, 'bold'), bg=drawingColor,
                                 text='–ü–µ—Ä–≤–∞—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –î–∏—Ä–∏—Ö–ª–µ)')
            etl_main = tk.Label(bubble_container, font=('Arial', 11), justify='left', wraplength=370, bg=drawingColor,
                                text=
                                ''' 
            –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–ª–Ω –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ, —Å–∫–æ—Ä–æ—Å—Ç—å –∫–æ–ª–µ–±–∞–Ω–∏–π –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –∫–æ–ª–µ–±–∞–Ω–∏–π –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ.
            –¢–∞–∫, –∫—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–¥–∞—é—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–ª–µ–±–∞–Ω–∏–π –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞,
            –í —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—é—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∫–æ–ª–µ–±–∞–Ω–∏–π –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏''')

            etl_title.place(x=195, y=50, anchor='s')
            etl_main.place(x=5, y=120, anchor='nw')
            bubble_container.pack_forget()

            def on_enter(event):
                bubble_container.place(x=200, y=540, anchor='sw')

            def on_leave(event):
                bubble_container.place_forget()

            div_container.bind("<Enter>", on_enter)
            div_container.bind("<Leave>", on_leave)

            ###################  –í–¢–û–†–ê–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

            # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
            div_container_1 = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
            div_container_1.pack(pady=500, padx=600, anchor='w')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è div_container
            div_container_1.pack_propagate(False)
            div_container_1.config(width=390, height=270)
            image_data_WEG_2_1 = [{"file": "wavely_bnd2.png", "text": """–í–¢–û–†–ê–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê
                                                                                                           \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                                   "position": (200, 300)}]

            for item_4 in image_data_WEG_2_1:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_WEG_2_1 = tk.Label(div_container_1, text=item_4["text"], font=('Arial', 12, 'bold'),
                                               bg=mainColor, fg=textColor)
                text_widget_WEG_2_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_WEG_2_1 = os.path.join("images", item_4["file"])
                image_WEG_2_1 = Image.open(image_path_WEG_2_1)
                photo_WEG_2_1 = ImageTk.PhotoImage(image_WEG_2_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_Laplass2 = tk.Canvas(div_container_1, width=image_WEG_2_1.width, height=image_WEG_2_1.height,
                                            bg=drawingColor,
                                            bd=1,
                                            relief='solid')
                canvas_Laplass2.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_Laplass2.create_image(0, 0, anchor=tk.NW, image=photo_WEG_2_1)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_Laplass2.photo = photo_WEG_2_1

            image_data_WEGREQ_2st = [
                {"file": "wavely_bnd2_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (300, 500)}]

            for item_5 in image_data_WEGREQ_2st:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_WEGREQ_2st = tk.Label(div_container_1, text=item_5["text"], fg=textColor,
                                                  font=('Arial', 12, 'bold'),
                                                  bg=mainColor)
                text_widget_WEGREQ_2st.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_WEGREQ_2st = os.path.join("images", item_5["file"])
                image_WEGREQ_2st = Image.open(image_path_WEGREQ_2st)
                photo_WEGREQ_2st = ImageTk.PhotoImage(image_WEGREQ_2st)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_WEGREQ_2st = tk.Canvas(div_container_1, width=image_WEGREQ_2st.width,
                                              height=image_WEGREQ_2st.height, bg=drawingColor,
                                              bd=1,
                                              relief='solid')
                canvas_WEGREQ_2st.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_WEGREQ_2st.create_image(0, 0, anchor=tk.NW, image=photo_WEGREQ_2st)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_WEGREQ_2st.photo = photo_WEGREQ_2st

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                div_container_1.place(x=930, y=815, anchor="s")

            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

            bubble_container_1 = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
            bubble_container_1.pack_propagate(False)
            bubble_container_1.config(width=390, height=370)
            etl_title_1 = tk.Label(bubble_container_1, font=('Arial', 12, 'bold'), bg=drawingColor,
                                   text='–í—Ç–æ—Ä–∞—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –ù–µ–π–º–∞–Ω–∞)')
            etl_main_1 = tk.Label(bubble_container_1, font=('Arial', 11), justify='left', bg=drawingColor,
                                  wraplength=370, text=
                                  ''' 
            –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–ª–Ω –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ, —Å–∫–æ—Ä–æ—Å—Ç—å –∫–æ–ª–µ–±–∞–Ω–∏–π –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –∫–æ–ª–µ–±–∞–Ω–∏–π –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ.
            –¢–∞–∫, –∫—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–¥–∞—é—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–µ–±–∞–Ω–∏–π –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞,
            –í —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—é—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∫–æ–ª–µ–±–∞–Ω–∏–π –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏''')

            etl_title_1.place(x=195, y=50, anchor='s')
            etl_main_1.place(x=5, y=120, anchor='nw')
            bubble_container_1.pack_forget()

            def on_enter(event):
                bubble_container_1.place(x=930, y=540, anchor='s')

            def on_leave(event):
                bubble_container_1.place_forget()

            div_container_1.bind("<Enter>", on_enter)
            div_container_1.bind("<Leave>", on_leave)

            ###################  –¢–†–ï–¢–¨–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

            # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
            div_container_2 = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
            div_container_2.pack(pady=500, padx=600, anchor='w')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è div_container
            div_container_2.pack_propagate(False)
            div_container_2.config(width=390, height=270)
            image_data_WEG_3_1 = [{"file": "wavely_bnd3.png", "text": """–¢–†–ï–¢–¨–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê
                                                                                                                 \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                                   "position": (200, 300)}]

            for item_6 in image_data_WEG_3_1:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                image_data_WEG_3_1 = tk.Label(div_container_2, text=item_6["text"], font=('Arial', 12, 'bold'),
                                              bg=mainColor, fg=textColor)
                image_data_WEG_3_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_WEG_3_1 = os.path.join("images", item_6["file"])
                image_WEG_3_1 = Image.open(image_path_WEG_3_1)
                photo_WEG_3_1 = ImageTk.PhotoImage(image_WEG_3_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_WEG_3_1 = tk.Canvas(div_container_2, width=image_WEG_3_1.width, height=image_WEG_3_1.height,
                                           bg=drawingColor,
                                           bd=1, relief='solid')
                canvas_WEG_3_1.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_WEG_3_1.create_image(0, 0, anchor=tk.NW, image=photo_WEG_3_1)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_WEG_3_1.photo = photo_WEG_3_1

            image_data_WEG_3_2 = [
                {"file": "wavely_bnd3_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (300, 500)}]
            for item_7 in image_data_WEG_3_2:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_WEG_3_2 = tk.Label(div_container_2, text=item_7["text"], font=('Arial', 12, 'bold'),
                                               bg=mainColor, fg=textColor)
                text_widget_WEG_3_2.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_WEG_3_2 = os.path.join("images", item_7["file"])
                image_WEG_3_2 = Image.open(image_path_WEG_3_2)
                photo_WEG_3_2 = ImageTk.PhotoImage(image_WEG_3_2)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_WEG_3_2 = tk.Canvas(div_container_2, width=image_WEG_3_2.width, height=image_WEG_3_2.height,
                                           bg=drawingColor,
                                           bd=1, relief='solid')
                canvas_WEG_3_2.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_WEG_3_2.create_image(0, 0, anchor=tk.NW, image=photo_WEG_3_2)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_WEG_3_2.photo = photo_WEG_3_2

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                div_container_2.place(x=1670, y=815, anchor="se")

            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

            bubble_container_2 = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
            bubble_container_2.pack_propagate(False)
            bubble_container_2.config(width=390, height=370)
            etl_title_2 = tk.Label(bubble_container_2, font=('Arial', 12, 'bold'), bg=drawingColor,
                                   text='–¢—Ä–µ—Ç—å—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –†–æ–±–∏–Ω–∞)')
            etl_main_2 = tk.Label(bubble_container_2, font=('Arial', 11), justify='left', bg=drawingColor,
                                  wraplength=370, text=
                                  ''' 
            –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–ª–Ω –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ, —Å–∫–æ—Ä–æ—Å—Ç—å –∫–æ–ª–µ–±–∞–Ω–∏–π –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –∫–æ–ª–µ–±–∞–Ω–∏–π –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ.
            –¢–∞–∫, –∫—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–¥–∞—é—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –≤–µ–ª–∏—á–∏–Ω—ã (–æ—Ç—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–≥–ª–æ—â–µ–Ω–∏—è, –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è –≤–æ–ª–Ω) –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º,
            –í —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—é—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∫–æ–ª–µ–±–∞–Ω–∏–π –≤ –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏''')

            etl_title_2.place(x=195, y=50, anchor='s')
            etl_main_2.place(x=5, y=120, anchor='nw')
            bubble_container_2.pack_forget()

            def on_enter(event):
                bubble_container_2.place(x=1670, y=540, anchor='se')

            def on_leave(event):
                bubble_container_2.place_forget()

            div_container_2.bind("<Enter>", on_enter)
            div_container_2.bind("<Leave>", on_leave)

class LaplassEquationSolver(tk.Frame):
    def __init__(self, master):
        super().__init__(master)

        self.image = ImageTk.PhotoImage(Image.open('images/wallpaper.png'))  # –§–æ–Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞
        self.background_label = tk.Label(self, image=self.image)
        self.background_label.place(x=0, y=0, relwidth=1, relheight=1)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–æ—Ä–º—ã
        self.title_label = tk.Label(self, text="–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á –¥–ª—è —É—Ä–∞–≤–Ω–µ–Ω–∏–π —ç–ª–ª–∏–ø—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–∏–ø–∞",
                                    font=('Arial', 16, 'bold'), bg=mainColor, fg=textColor)
        self.title_label.pack(pady=20)

        # –¢–µ–∫—Å—Ç –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        text_below_title = "–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –õ–∞–ø–ª–∞—Å–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (X;Y):"
        self.text_label = tk.Label(self, text=text_below_title, font=('Arial', 12, 'bold'), bg=mainColor, anchor='w')
        self.text_label.pack(pady=10, padx=15, anchor='w')

        # –¢–µ–∫—Å—Ç –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        text_below_title_0 = "–ì–µ–æ–º–µ—Ç—Ä–∏—è –æ–±–ª–∞—Å—Ç–∏"
        self.text_label_0 = tk.Label(self, text=text_below_title_0, font=('Arial', 12, 'bold'), bg=mainColor, fg=textColor,
                                     anchor='w')
        self.text_label_0.pack(pady=19, padx=55, anchor='w')

        # –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤
        image_data_1 = [{"file": "laplass_graph.png", "text": "–û–±—â–∏–π –≤–∏–¥ –æ–¥–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:", "position": (305, 170)}]

        for item in image_data_1:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_1 = os.path.join("images", item["file"])
            image_1 = Image.open(image_path_1)
            photo_1 = ImageTk.PhotoImage(image_1)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ drawingColor —Ñ–æ–Ω–æ–º
            canvas_1 = tk.Canvas(self, width=image_1.width, height=image_1.height, bg=drawingColor, bd=1, relief='solid')
            canvas_1.place(x=35, y=258, anchor="w")

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_1.create_image(0, 0, anchor=tk.NW, image=photo_1)

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_1.photo = photo_1

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_1 = tk.Label(self, text=item["text"], font=('Arial', 12, 'bold'), bg=mainColor, fg=textColor)
            text_widget_1.place(x=item["position"][0], y=item["position"][1] - text_widget_1.winfo_reqheight() - 20)

            # –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤
        image_data_2 = [{"file": "laplass_general.png", "text": """–≥–¥–µ u(x,y) - –º–æ–∂–µ—Ç –±—ã—Ç—å:
                    \n1.\t—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–º (–Ω–µ –∑–∞–≤–∏—Å—è—â–∏–º –æ—Ç –≤—Ä–µ–º–µ–Ω–∏) —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, 
                    \n2.\t—Å–∫–æ—Ä–æ—Å—Ç—å—é –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ (–±–µ–∑–≤–∏—Ö—Ä–µ–≤–æ–≥–æ) —Ç–µ—á–µ–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–π –∂–∏–¥–∫–æ—Å—Ç–∏,
                    \n3.\t—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –∏ –º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –ø–æ–ª–µ–π 
                    \n–∏ —Ç.–¥."""
                            , "position": (300, 550)}]

        for item_1 in image_data_2:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_2 = os.path.join("images", item_1["file"])
            image_2 = Image.open(image_path_2)
            photo_2 = ImageTk.PhotoImage(image_2)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ drawingColor —Ñ–æ–Ω–æ–º
            canvas_2 = tk.Canvas(self, width=image_2.width, height=image_2.height, bg=drawingColor, bd=1, relief='solid')
            canvas_2.place(x=300, y=200, anchor="w")

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_2.create_image(0, 0, anchor=tk.NW, image=photo_2)

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_2.photo = photo_2

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_2 = tk.Label(self, text=item_1["text"], font=('Arial', 12, 'bold'), bg=mainColor, fg=textColor,
                                     justify=tk.LEFT)
            text_widget_2.place(x=item_1["position"][0], y=item_1["position"][1] - text_widget_2.winfo_reqheight() - 20,
                                anchor='w')


            ###################  –ü–ï–†–í–ê–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

            # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
            div_container = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
            div_container.pack(padx=600, pady=800, anchor='w')
            div_container.pack_propagate(False)
            div_container.config(width=500, height=250)
            Image_data_LPS_1_1 = [{"file": "laplass_bnd1.png", "text": """–ü–ï–†–í–ê–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê
                                                                                                \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                                  "position": (200, 300)}]

            for item_2 in Image_data_LPS_1_1:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_LPS_1_1 = tk.Label(div_container, text=item_2["text"], font=('Arial', 12, 'bold'), bg=mainColor, fg=textColor)
                text_widget_LPS_1_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                Image_path_LPS_1_1 = os.path.join("images", item_2["file"])
                Image_LPS_1_1 = Image.open(Image_path_LPS_1_1)
                photo_LPS_1_1 = ImageTk.PhotoImage(Image_LPS_1_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_LPS_1_1 = tk.Canvas(div_container, width=Image_LPS_1_1.width, height=Image_LPS_1_1.height, bg=drawingColor,
                                       bd=1,
                                       relief='solid')
                canvas_LPS_1_1.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_LPS_1_1.create_image(0, 0, anchor=tk.NW, image=photo_LPS_1_1)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_LPS_1_1.photo = photo_LPS_1_1

            photo_WEGREQ1st = [{"file": "laplass_bnd1_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (400, 400)}]

            for item_3 in photo_WEGREQ1st:
               # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_1_4 = tk.Label(div_container, text=item_3["text"], font=('Arial', 12, 'bold'), bg=mainColor)
                text_widget_1_4.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_WEGREQ1st = os.path.join("images", item_3["file"])
                image_WEGREQ1st = Image.open(image_path_WEGREQ1st)
                photo_WEGREQ1st = ImageTk.PhotoImage(image_WEGREQ1st)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_WEGREQ1st = tk.Canvas(div_container, width=image_WEGREQ1st.width, height=image_WEGREQ1st.height,
                                             bg=drawingColor, bd=1,
                                             relief='solid')
                canvas_WEGREQ1st.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_WEGREQ1st.create_image(0, 0, anchor=tk.NW, image=photo_WEGREQ1st)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_WEGREQ1st.photo = photo_WEGREQ1st

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                div_container.place(x=50, y=865, anchor="sw")

            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

            bubble_container = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
            bubble_container.pack_propagate(False)
            bubble_container.config(width=500, height=370)

            etl_title = tk.Label(bubble_container, font=('Arial', 11, 'bold'),
                                 text='–ü–µ—Ä–≤–∞—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –î–∏—Ä–∏—Ö–ª–µ)', bg = drawingColor)
            etl_title.place(x=205, y=45, anchor='s')
            extra_text_label_1 = tk.Label(bubble_container,justify='left', wraplength=200, bg=drawingColor, text=
            '''
            –ü–∞—Ä–∞–º–µ—Ç—Ä—ã a –∏ b –∑–∞–¥–∞—é—Ç –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é U(x,y), –∫–æ—Ç–æ—Ä–∞—è –±—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–ª–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏—é –õ–∞–ø–ª–∞—Å–∞. 
            –ö—Ä–∞–µ–≤—ã–µ –∑–∞–¥–∞—á–∏ (–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ) –∑–∞–¥–∞—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö –æ–±–ª–∞—Å—Ç–∏. –¢–∞–∫–∂–µ, –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ U(x,y) - –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏, –∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π 
            –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—Ä–∞–µ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö —Ä–∞–≤–Ω—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É.
            ''')
            extra_text_label_1.place(x=220, y=50)

            extra_text_label_2 = tk.Label(bubble_container, justify='left', wraplength=400, bg=drawingColor, text=
            '''
            –§—É–Ω–∫—Ü–∏—è U –º–æ–∂–µ—Ç –æ–ø–∏—Å—ã–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —è–≤–ª–µ–Ω–∏–π. –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–¥–∞–≤–∞–ª–∏—Å—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —Å –ø–æ–º–æ—â—å—é –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫—Ä–∞–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π f (–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã –∫–∞–∫ t).
            ''')
            extra_text_label_2.place(x=10, y=270)
            extra_image = [
                {"file": "Laplass_bnd_addict.png", "text": "–ì–µ–æ–º–µ—Ç—Ä–∏—è –æ–±–ª–∞—Å—Ç–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:", "position": (305, 200)}]

            for item in extra_image:
                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_1 = os.path.join("images", item["file"])
                image_1 = Image.open(image_path_1)
                photo_1 = ImageTk.PhotoImage(image_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ drawingColor —Ñ–æ–Ω–æ–º
                canvas_1 = tk.Canvas(bubble_container, width=image_1.width, height=image_1.height, bd=1,
                                     relief='solid')
                canvas_1.place(x=15, y=175, anchor="w")

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_1.create_image(0, 0, anchor=tk.NW, image=photo_1)

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_1.photo = photo_1

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_1 = tk.Label(bubble_container, text=item["text"], font=('Arial', 8, 'bold'), bg=drawingColor,
                                         fg=textColor)
                text_widget_1.place(x=20, y=50)



            bubble_container.pack_forget()

            def on_enter(event):
                bubble_container.place(x=50, y=610, anchor='sw')

            def on_leave(event):
                bubble_container.place_forget()

            div_container.bind("<Enter>", on_enter)
            div_container.bind("<Leave>", on_leave)
            ###################  –í–¢–û–†–ê–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

            # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
            div_container_1 = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
            div_container_1.pack(pady=500, padx=600, anchor='w')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è div_container
            div_container_1.pack_propagate(False)
            div_container_1.config(width=520, height=250)
            image_data_LPS_2_1 = [{"file": "laplass_bnd2.png", "text": """–í–¢–û–†–ê–Ø –ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê\n
                                                                                                       \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                                       "position": (200, 300)}]

            for item_4 in image_data_LPS_2_1:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_LPS_2_1 = tk.Label(div_container_1, text=item_4["text"], font=('Arial', 12, 'bold'),
                                                   bg=mainColor, fg=textColor)
                text_widget_LPS_2_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_LPS_2_1 = os.path.join("images", item_4["file"])
                image_LPS_2_1 = Image.open(image_path_LPS_2_1)
                photo_LPS_2_1 = ImageTk.PhotoImage(image_LPS_2_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_LPS_2_1 = tk.Canvas(div_container_1, width=image_LPS_2_1.width, height=image_LPS_2_1.height,
                                           bg=drawingColor,
                                           bd=1,
                                           relief='solid')
                canvas_LPS_2_1.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_LPS_2_1.create_image(0, 0, anchor=tk.NW, image=photo_LPS_2_1)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_LPS_2_1.photo = photo_LPS_2_1

            image_data_WEGREQ_2st = [{"file": "laplass_bnd2_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (300, 500)}]

            for item_5 in image_data_WEGREQ_2st:
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
               text_widget_WEGREQ_2st = tk.Label(div_container_1, text=item_5["text"], font=('Arial', 12, 'bold'),
                                                      bg=mainColor)
               text_widget_WEGREQ_2st.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                    # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
               image_path_WEGREQ_2st = os.path.join("images", item_5["file"])
               image_WEGREQ_2st = Image.open(image_path_WEGREQ_2st)
               photo_WEGREQ_2st = ImageTk.PhotoImage(image_WEGREQ_2st)

                    # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
               canvas_WEGREQ_2st = tk.Canvas(div_container_1, width=image_WEGREQ_2st.width,
                                                  height=image_WEGREQ_2st.height, bg=drawingColor,
                                                 bd=1,
                                                  relief='solid')
               canvas_WEGREQ_2st.pack()

               # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
               canvas_WEGREQ_2st.create_image(0, 0, anchor=tk.NW, image=photo_WEGREQ_2st)
               # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
               canvas_WEGREQ_2st.photo = photo_WEGREQ_2st

                    # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            div_container_1.place(x=864, y=865, anchor="s")

            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

            bubble_container_1 = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
            bubble_container_1.pack_propagate(False)
            bubble_container_1.config(width=520, height=370)
            etl_title = tk.Label(bubble_container_1, font=('Arial', 11, 'bold'),
                                 text='–í—Ç–æ—Ä–∞—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –ù–µ–π–º–∞–Ω–∞)', bg=drawingColor)
            etl_title.place(x=205, y=45, anchor='s')
            extra_text_label_1 = tk.Label(bubble_container_1, justify='left', wraplength=290, bg=drawingColor, text=
            '''
            –ü–∞—Ä–∞–º–µ—Ç—Ä—ã a –∏ b –∑–∞–¥–∞—é—Ç –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é U(x,y), –∫–æ—Ç–æ—Ä–∞—è –±—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–ª–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏—é –õ–∞–ø–ª–∞—Å–∞. 
            –í—Ç–æ—Ä–∞—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞, —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–∫ –∑–∞–¥–∞—á–∞ –ù–µ–π–º–∞–Ω–∞, –∑–∞–¥–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ (–ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –ø–æ –Ω–æ—Ä–º–∞–ª–∏ –∫ –≥—Ä–∞–Ω–∏—Ü–µ) —Ñ—É–Ω–∫—Ü–∏–∏ U(x,y) –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏. 
            –¢–∞–∫–∂–µ, –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ U(x,y) - –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏, –∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—Ä–∞–µ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö —Ä–∞–≤–Ω—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É.
            ''')
            extra_text_label_1.place(x=220, y=50)

            extra_text_label_2 = tk.Label(bubble_container_1, justify='left', wraplength=400, bg=drawingColor, text=
            '''
            –§—É–Ω–∫—Ü–∏—è U –º–æ–∂–µ—Ç –æ–ø–∏—Å—ã–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —è–≤–ª–µ–Ω–∏–π. –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–¥–∞–≤–∞–ª–∏—Å—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —Å –ø–æ–º–æ—â—å—é –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫—Ä–∞–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π f (–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã –∫–∞–∫ t).
            ''')
            extra_text_label_2.place(x=10, y=270)
            extra_image = [
                {"file": "Laplass_bnd_addict.png", "text": "–ì–µ–æ–º–µ—Ç—Ä–∏—è –æ–±–ª–∞—Å—Ç–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:", "position": (305, 200)}]

            for item in extra_image:
                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_1 = os.path.join("images", item["file"])
                image_1 = Image.open(image_path_1)
                photo_1 = ImageTk.PhotoImage(image_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ drawingColor —Ñ–æ–Ω–æ–º
                canvas_1 = tk.Canvas(bubble_container_1, width=image_1.width, height=image_1.height, bd=1,
                                     relief='solid')
                canvas_1.place(x=15, y=175, anchor="w")

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_1.create_image(0, 0, anchor=tk.NW, image=photo_1)

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_1.photo = photo_1

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_1 = tk.Label(bubble_container_1, text=item["text"], font=('Arial', 8, 'bold'),
                                         bg=drawingColor,
                                         fg=textColor)
                text_widget_1.place(x=20, y=50)

            bubble_container_1.pack_forget()

            def on_enter(event):
                bubble_container_1.place(x=864, y=610, anchor='s')

            def on_leave(event):
                bubble_container_1.place_forget()

            div_container_1.bind("<Enter>", on_enter)
            div_container_1.bind("<Leave>", on_leave)

            ###################  –¢–†–ï–¢–¨–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê ##########################################

            # –°–æ–∑–¥–∞–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±–µ–ª–æ–π —Ä–∞–º–∫–æ–π
            div_container_2 = tk.Frame(self, bg=mainColor, bd=1, relief='solid')
            div_container_2.pack(pady=500, padx=600, anchor='w')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è div_container
            div_container_2.pack_propagate(False)
            div_container_2.config(width=706, height=250)
            image_data_LPS_3_1 = [{"file": "laplass_bnd3.png", "text": """–¢–†–ï–¢–¨–Ø –ù–ê–ß–ê–õ–¨–ù–û-–ö–†–ê–ï–í–ê–Ø –ó–ê–î–ê–ß–ê\n
                                                                                                     \n –ö—Ä–∞–µ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:""",
                                       "position": (200, 300)}]

            for item_6 in image_data_LPS_3_1:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_LPS_3_1 = tk.Label(div_container_2, text=item_6["text"], font=('Arial', 12, 'bold'),
                                                   bg=mainColor, fg=textColor)
                text_widget_LPS_3_1.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_LPS_3_1 = os.path.join("images", item_6["file"])
                image_LPS_3_1 = Image.open(image_path_LPS_3_1)
                photo_LPS_3_1 = ImageTk.PhotoImage(image_LPS_3_1)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_LPS_3_1 = tk.Canvas(div_container_2, width=image_LPS_3_1.width, height=image_LPS_3_1.height,
                                               bg=drawingColor,
                                               bd=1, relief='solid')
                canvas_LPS_3_1.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_LPS_3_1.create_image(0, 0, anchor=tk.NW, image=photo_LPS_3_1)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_LPS_3_1.photo = photo_LPS_3_1

            image_data_WEGREQ_3st = [{"file": "laplass_bnd3_st_data.png", "text": "–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "position": (300, 500)}]
            for item_7 in image_data_WEGREQ_3st:
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
                text_widget_WEGREQ_3st = tk.Label(div_container_2, text=item_7["text"], font=('Arial', 12, 'bold'),
                                                   bg=mainColor)
                text_widget_WEGREQ_3st.pack(anchor='center')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º pack –¥–ª—è text_widget_Laplass1

                        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                image_path_WEGREQ_3st = os.path.join("images", item_7["file"])
                image_1_8 = Image.open(image_path_WEGREQ_3st)
                photo_1_8 = ImageTk.PhotoImage(image_1_8)

                # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º
                canvas_1_8 = tk.Canvas(div_container_2, width=image_1_8.width, height=image_1_8.height,
                                               bg=drawingColor,
                                               bd=1, relief='solid')
                canvas_1_8.pack()

                # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
                canvas_1_8.create_image(0, 0, anchor=tk.NW, image=photo_1_8)
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                canvas_1_8.photo = photo_1_8

                           # –†–∞–∑–º–µ—â–µ–Ω–∏–µ div-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            div_container_2.place(x=1870, y=865, anchor="se")

        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π

        bubble_container_2 = tk.Frame(self, bg='#ffffff', bd=1, relief='solid')
        bubble_container_2.pack_propagate(False)
        bubble_container_2.config(width=690, height=370)
        etl_title = tk.Label(bubble_container_2, font=('Arial', 11, 'bold'),
                             text='–¢—Ä–µ—Ç—å—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞\n(–ó–∞–¥–∞—á–∞ –†–æ–±–∏–Ω–∞)', bg=drawingColor)
        etl_title.place(x=205, y=45, anchor='s')
        extra_text_label_1 = tk.Label(bubble_container_2, justify='left', wraplength=420, bg=drawingColor, text=
        '''
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã a –∏ b –∑–∞–¥–∞—é—Ç –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é U(x,y), –∫–æ—Ç–æ—Ä–∞—è –±—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–ª–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏—é –õ–∞–ø–ª–∞—Å–∞. 
        –ö—Ä–∞–µ–≤—ã–µ –∑–∞–¥–∞—á–∏ (–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ) –∑–∞–¥–∞—é—Ç –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∑–Ω–∞—á–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–∏ U(x,y) –∏ –µ–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏.
        –ó–∞–º–µ—Ç–∏–º, —á—Ç–æ –ø—Ä–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞—Ö a, —Ä–∞–≤–Ω—ã—Ö –Ω—É–ª—é - –∑–∞–¥–∞—á–∞ —Å–≤–æ–¥–∏—Ç—Å—è –∫ –≤—Ç–æ—Ä–æ–π –Ω–∞—á–∞–ª—å–Ω–æ-–∫—Ä–∞–µ–≤–æ–π (–∑–∞–¥–∞—á–µ –ù–µ–π–º–∞–Ω–∞).
        –¢–∞–∫–∂–µ, –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ U(x,y) - –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏, –∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—Ä–∞–µ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö —Ä–∞–≤–Ω—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É.
        –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–µ–Ω–∏–µ: –¢—Ä–µ—Ç—å—è –∫—Ä–∞–µ–≤–∞—è –∑–∞–¥–∞—á–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä–≤–æ–π –∏ –≤—Ç–æ—Ä–æ–π –∫—Ä–∞–µ–≤—ã—Ö –∑–∞–¥–∞—á.  –û–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —è–≤–ª–µ–Ω–∏—è, —É—á–∏—Ç—ã–≤–∞—è  –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–∞–∫ –∏ –µ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—É—é –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ.
        ''')

        extra_text_label_1.place(x=220, y=50)

        extra_text_label_2 = tk.Label(bubble_container_2, justify='left', wraplength=400, bg=drawingColor, text=
        '''
        –§—É–Ω–∫—Ü–∏—è U –º–æ–∂–µ—Ç –æ–ø–∏—Å—ã–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —è–≤–ª–µ–Ω–∏–π. –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–¥–∞–≤–∞–ª–∏—Å—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —Å –ø–æ–º–æ—â—å—é –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫—Ä–∞–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π f (–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã –∫–∞–∫ t).
        ''')
        extra_text_label_2.place(x=10, y=270)
        extra_image = [
            {"file": "Laplass_bnd_addict.png", "text": "–ì–µ–æ–º–µ—Ç—Ä–∏—è –æ–±–ª–∞—Å—Ç–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è:", "position": (305, 200)}]

        for item in extra_image:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image_path_1 = os.path.join("images", item["file"])
            image_1 = Image.open(image_path_1)
            photo_1 = ImageTk.PhotoImage(image_1)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ drawingColor —Ñ–æ–Ω–æ–º
            canvas_1 = tk.Canvas(bubble_container_2, width=image_1.width, height=image_1.height, bd=1,
                                 relief='solid')
            canvas_1.place(x=15, y=175, anchor="w")

            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            canvas_1.create_image(0, 0, anchor=tk.NW, image=photo_1)

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç PhotoImage, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            canvas_1.photo = photo_1

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ö–æ–ª—Å—Ç
            text_widget_1 = tk.Label(bubble_container_2, text=item["text"], font=('Arial', 8, 'bold'), bg=drawingColor,
                                     fg=textColor)
            text_widget_1.place(x=20, y=50)
        bubble_container_2.pack_forget()

        def on_enter(event):
            bubble_container_2.place(x=1870, y=610, anchor='se')

        def on_leave(event):
            bubble_container_2.place_forget()

        div_container_2.bind("<Enter>", on_enter)
        div_container_2.bind("<Leave>", on_leave)



if __name__ == "__main__":
    app = EquationForms()
    app.geometry(f'{app.winfo_screenwidth()}x{app.winfo_screenheight()}')
    app.bind('<KeyPress-q>', app.quit_form)
    app.mainloop()
